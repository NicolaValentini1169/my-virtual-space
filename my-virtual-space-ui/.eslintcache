[{"C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\index.js":"1","C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\App.js":"2","C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\reportWebVitals.js":"3","C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\include\\bootstrap.js":"4","C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\include\\popper.js":"5","C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\include\\jquery.js":"6","C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\include\\tether.js":"7","C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\api\\stateApi.js":"8","C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\api\\userApi.js":"9","C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\api\\animeApi.js":"10","C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\api\\genreApi.js":"11","C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\api\\seasonApi.js":"12","C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\components\\login\\loginApi.js":"13","C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\components\\home.jsx":"14","C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\components\\privateRoute.jsx":"15","C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\components\\notFound.jsx":"16","C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\components\\login\\login.jsx":"17","C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\services\\httpService.js":"18","C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\utils\\utils.js":"19","C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\components\\header.jsx":"20","C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\components\\common\\navbar.jsx":"21","C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\components\\common\\loadingSpinner.jsx":"22","C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\services\\takeLatest.js":"23","C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\components\\common\\navButton.jsx":"24","C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\components\\anime\\animeList.jsx":"25","C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\components\\common\\tableHeader.jsx":"26","C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\components\\anime\\anime.jsx":"27","C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\components\\common\\emptyBody.jsx":"28"},{"size":645,"mtime":1614270221243,"results":"29","hashOfConfig":"30"},{"size":8388,"mtime":1614612506517,"results":"31","hashOfConfig":"30"},{"size":415,"mtime":1607018889545,"results":"32","hashOfConfig":"30"},{"size":134,"mtime":1614270221242,"results":"33","hashOfConfig":"30"},{"size":107,"mtime":1607018889540,"results":"34","hashOfConfig":"30"},{"size":63,"mtime":1607018889539,"results":"35","hashOfConfig":"30"},{"size":101,"mtime":1607018889541,"results":"36","hashOfConfig":"30"},{"size":2879,"mtime":1614187270964,"results":"37","hashOfConfig":"30"},{"size":2854,"mtime":1614186795161,"results":"38","hashOfConfig":"30"},{"size":2879,"mtime":1614187270949,"results":"39","hashOfConfig":"30"},{"size":2882,"mtime":1614187270995,"results":"40","hashOfConfig":"30"},{"size":2916,"mtime":1614187271013,"results":"41","hashOfConfig":"30"},{"size":1375,"mtime":1614352612277,"results":"42","hashOfConfig":"30"},{"size":2382,"mtime":1614613575976,"results":"43","hashOfConfig":"30"},{"size":1495,"mtime":1614608445242,"results":"44","hashOfConfig":"30"},{"size":197,"mtime":1614270221195,"results":"45","hashOfConfig":"30"},{"size":5093,"mtime":1614352612276,"results":"46","hashOfConfig":"30"},{"size":1348,"mtime":1614270221207,"results":"47","hashOfConfig":"30"},{"size":183,"mtime":1614270221208,"results":"48","hashOfConfig":"30"},{"size":632,"mtime":1614270221191,"results":"49","hashOfConfig":"30"},{"size":4589,"mtime":1614612400461,"results":"50","hashOfConfig":"30"},{"size":427,"mtime":1614270221187,"results":"51","hashOfConfig":"30"},{"size":455,"mtime":1614270221208,"results":"52","hashOfConfig":"30"},{"size":558,"mtime":1614612400469,"results":"53","hashOfConfig":"30"},{"size":1890,"mtime":1614613816232,"results":"54","hashOfConfig":"30"},{"size":2154,"mtime":1614613778991,"results":"55","hashOfConfig":"30"},{"size":568,"mtime":1614613363749,"results":"56","hashOfConfig":"30"},{"size":297,"mtime":1614352680778,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"u8h6tw",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\index.js",[],["121","122"],"C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\App.js",[],"C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\reportWebVitals.js",[],"C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\include\\bootstrap.js",[],"C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\include\\popper.js",[],"C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\include\\jquery.js",[],"C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\include\\tether.js",[],"C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\api\\stateApi.js",["123"],"import constants from '../constants.json';\r\nimport http from '../services/httpService';\r\nimport config from '../config.json';\r\nimport {toast} from 'react-toastify';\r\nimport {toastError} from '../utils/utils';\r\n\r\nconst getConf = () => ({\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: localStorage.getItem(constants.accessToken),\r\n    },\r\n});\r\n\r\nconst saveState = (state, callback) => {\r\n    const conf = getConf();\r\n\r\n    const url = new URL(`${config.apiStateEndpoint}`);\r\n\r\n    http\r\n        .post(url.href, state, conf)\r\n        .then(({data: state}) => {\r\n            toast.success(`Stato ${state.statename} creato correttamente`);\r\n\r\n            if (typeof callback === 'function') callback();\r\n        })\r\n        .catch(({response}) => {\r\n            toastError(response?.status === 400 && response.data?.message);\r\n        });\r\n};\r\n\r\nconst updateState = (state, callback) => {\r\n    const conf = getConf();\r\n\r\n    const url = new URL(`${config.apiStateEndpoint}`);\r\n\r\n    http\r\n        .put(url.href, state, conf)\r\n        .then(({data: state}) => {\r\n            toast.success(`Stato ${state.statename} agiornato correttamente`);\r\n\r\n            if (typeof callback === 'function') callback();\r\n        })\r\n        .catch(({response}) => {\r\n            toastError(response?.status === 400 && response.data?.message);\r\n        });\r\n};\r\n\r\nconst deleteStateById = (id, callback) => {\r\n    const conf = getConf();\r\n\r\n    const url = new URL(`${config.apiStateEndpoint}`);\r\n    url.searchParams.append('id', id);\r\n\r\n    http\r\n        .delete(url.href, conf)\r\n        .then(({data: state}) => {\r\n            toast.success(`Stato ${state.statename} eliminato correttamente`);\r\n\r\n            if (typeof callback === 'function') callback();\r\n        })\r\n        .catch(({response}) => {\r\n            toastError((response?.status === 400 || response?.status === 404) && response.data?.message);\r\n        });\r\n};\r\n\r\nconst findAll = () => {\r\n    const conf = getConf();\r\n\r\n    const url = new URL(`${config.apiStateEndpoint}/findAll`);\r\n\r\n    return http\r\n        .get(url.href, conf)\r\n        .then(({data: states}) => {\r\n            return states;\r\n        })\r\n        .catch(({response}) => {\r\n            toastError(response?.status === 400 && response.data?.message);\r\n        });\r\n};\r\n\r\nconst findById = (id) => {\r\n    const conf = getConf();\r\n\r\n    const url = new URL(`${config.apiStateEndpoint}/findById`);\r\n    url.searchParams.append('id', id);\r\n\r\n    return http\r\n        .get(url.href, conf)\r\n        .then(({data: state}) => {\r\n            return state;\r\n        })\r\n        .catch(({response}) => {\r\n            toastError((response?.status === 400 || response?.status === 404) && response.data?.message);\r\n        });\r\n};\r\n\r\nexport default {\r\n    saveState,\r\n    updateState,\r\n    deleteStateById,\r\n    findAll,\r\n    findById\r\n};\r\n","C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\api\\userApi.js",["124"],"import constants from '../constants.json';\r\nimport http from '../services/httpService';\r\nimport config from '../config.json';\r\nimport {toast} from 'react-toastify';\r\nimport {toastError} from '../utils/utils';\r\n\r\nconst getConf = () => ({\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: localStorage.getItem(constants.accessToken),\r\n    },\r\n});\r\n\r\nconst saveUser = (user, callback) => {\r\n    const conf = getConf();\r\n\r\n    const url = new URL(`${config.apiUserEndpoint}`);\r\n\r\n    http\r\n        .post(url.href, user, conf)\r\n        .then(({data: user}) => {\r\n            toast.success(`Utente ${user.username} creato correttamente`);\r\n\r\n            if (typeof callback === 'function') callback();\r\n        })\r\n        .catch(({response}) => {\r\n            toastError(response?.status === 400 && response.data?.message);\r\n        });\r\n};\r\n\r\nconst updateUser = (user, callback) => {\r\n    const conf = getConf();\r\n\r\n    const url = new URL(`${config.apiUserEndpoint}`);\r\n\r\n    http\r\n        .put(url.href, user, conf)\r\n        .then(({data: user}) => {\r\n            toast.success(`Utente ${user.username} agiornato correttamente`);\r\n\r\n            if (typeof callback === 'function') callback();\r\n        })\r\n        .catch(({response}) => {\r\n            toastError(response?.status === 400 && response.data?.message);\r\n        });\r\n};\r\n\r\nconst deleteUserById = (id, callback) => {\r\n    const conf = getConf();\r\n\r\n    const url = new URL(`${config.apiUserEndpoint}`);\r\n    url.searchParams.append('id', id);\r\n\r\n    http\r\n        .delete(url.href, conf)\r\n        .then(({data: user}) => {\r\n            toast.success(`Utente ${user.username} eliminato correttamente`);\r\n\r\n            if (typeof callback === 'function') callback();\r\n        })\r\n        .catch(({response}) => {\r\n            toastError((response?.status === 400 || response?.status === 404) && response.data?.message);\r\n        });\r\n};\r\n\r\nconst findAll = () => {\r\n    const conf = getConf();\r\n\r\n    const url = new URL(`${config.apiUserEndpoint}/findAll`);\r\n\r\n    return http\r\n        .get(url.href, conf)\r\n        .then(({data: users}) => {\r\n            return users;\r\n        })\r\n        .catch(({response}) => {\r\n            toastError(response?.status === 400 && response.data?.message);\r\n        });\r\n};\r\n\r\nconst findById = (id) => {\r\n    const conf = getConf();\r\n\r\n    const url = new URL(`${config.apiUserEndpoint}/findById`);\r\n    url.searchParams.append('id', id);\r\n\r\n    return http\r\n        .get(url.href, conf)\r\n        .then(({data: user}) => {\r\n            return user;\r\n        })\r\n        .catch(({response}) => {\r\n            toastError((response?.status === 400 || response?.status === 404) && response.data?.message);\r\n        });\r\n};\r\n\r\nexport default {\r\n    saveUser,\r\n    updateUser,\r\n    deleteUserById,\r\n    findAll,\r\n    findById\r\n};\r\n","C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\api\\animeApi.js",["125"],"import constants from '../constants.json';\r\nimport http from '../services/httpService';\r\nimport config from '../config.json';\r\nimport {toast} from 'react-toastify';\r\nimport {toastError} from '../utils/utils';\r\n\r\nconst getConf = () => ({\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: localStorage.getItem(constants.accessToken),\r\n    },\r\n});\r\n\r\nconst saveAnime = (anime, callback) => {\r\n    const conf = getConf();\r\n\r\n    const url = new URL(`${config.apiAnimeEndpoint}`);\r\n\r\n    http\r\n        .post(url.href, anime, conf)\r\n        .then(({data: anime}) => {\r\n            toast.success(`Anime ${anime.animename} creato correttamente`);\r\n\r\n            if (typeof callback === 'function') callback();\r\n        })\r\n        .catch(({response}) => {\r\n            toastError(response?.status === 400 && response.data?.message);\r\n        });\r\n};\r\n\r\nconst updateAnime = (anime, callback) => {\r\n    const conf = getConf();\r\n\r\n    const url = new URL(`${config.apiAnimeEndpoint}`);\r\n\r\n    http\r\n        .put(url.href, anime, conf)\r\n        .then(({data: anime}) => {\r\n            toast.success(`Anime ${anime.animename} agiornato correttamente`);\r\n\r\n            if (typeof callback === 'function') callback();\r\n        })\r\n        .catch(({response}) => {\r\n            toastError(response?.status === 400 && response.data?.message);\r\n        });\r\n};\r\n\r\nconst deleteAnimeById = (id, callback) => {\r\n    const conf = getConf();\r\n\r\n    const url = new URL(`${config.apiAnimeEndpoint}`);\r\n    url.searchParams.append('id', id);\r\n\r\n    http\r\n        .delete(url.href, conf)\r\n        .then(({data: anime}) => {\r\n            toast.success(`Anime ${anime.animename} eliminato correttamente`);\r\n\r\n            if (typeof callback === 'function') callback();\r\n        })\r\n        .catch(({response}) => {\r\n            toastError((response?.status === 400 || response?.status === 404) && response.data?.message);\r\n        });\r\n};\r\n\r\nconst findAll = () => {\r\n    const conf = getConf();\r\n\r\n    const url = new URL(`${config.apiAnimeEndpoint}/findAll`);\r\n\r\n    return http\r\n        .get(url.href, conf)\r\n        .then(({data: animes}) => {\r\n            return animes;\r\n        })\r\n        .catch(({response}) => {\r\n            toastError(response?.status === 400 && response.data?.message);\r\n        });\r\n};\r\n\r\nconst findById = (id) => {\r\n    const conf = getConf();\r\n\r\n    const url = new URL(`${config.apiAnimeEndpoint}/findById`);\r\n    url.searchParams.append('id', id);\r\n\r\n    return http\r\n        .get(url.href, conf)\r\n        .then(({data: anime}) => {\r\n            return anime;\r\n        })\r\n        .catch(({response}) => {\r\n            toastError((response?.status === 400 || response?.status === 404) && response.data?.message);\r\n        });\r\n};\r\n\r\nexport default {\r\n    saveAnime,\r\n    updateAnime,\r\n    deleteAnimeById,\r\n    findAll,\r\n    findById\r\n};\r\n","C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\api\\genreApi.js",["126"],"import constants from '../constants.json';\r\nimport http from '../services/httpService';\r\nimport config from '../config.json';\r\nimport {toast} from 'react-toastify';\r\nimport {toastError} from '../utils/utils';\r\n\r\nconst getConf = () => ({\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: localStorage.getItem(constants.accessToken),\r\n    },\r\n});\r\n\r\nconst saveGenre = (genre, callback) => {\r\n    const conf = getConf();\r\n\r\n    const url = new URL(`${config.apiGenreEndpoint}`);\r\n\r\n    http\r\n        .post(url.href, genre, conf)\r\n        .then(({data: genre}) => {\r\n            toast.success(`Genere ${genre.genrename} creato correttamente`);\r\n\r\n            if (typeof callback === 'function') callback();\r\n        })\r\n        .catch(({response}) => {\r\n            toastError(response?.status === 400 && response.data?.message);\r\n        });\r\n};\r\n\r\nconst updateGenre = (genre, callback) => {\r\n    const conf = getConf();\r\n\r\n    const url = new URL(`${config.apiGenreEndpoint}`);\r\n\r\n    http\r\n        .put(url.href, genre, conf)\r\n        .then(({data: genre}) => {\r\n            toast.success(`Genere ${genre.genrename} agiornato correttamente`);\r\n\r\n            if (typeof callback === 'function') callback();\r\n        })\r\n        .catch(({response}) => {\r\n            toastError(response?.status === 400 && response.data?.message);\r\n        });\r\n};\r\n\r\nconst deleteGenreById = (id, callback) => {\r\n    const conf = getConf();\r\n\r\n    const url = new URL(`${config.apiGenreEndpoint}`);\r\n    url.searchParams.append('id', id);\r\n\r\n    http\r\n        .delete(url.href, conf)\r\n        .then(({data: genre}) => {\r\n            toast.success(`Genere ${genre.genrename} eliminato correttamente`);\r\n\r\n            if (typeof callback === 'function') callback();\r\n        })\r\n        .catch(({response}) => {\r\n            toastError((response?.status === 400 || response?.status === 404) && response.data?.message);\r\n        });\r\n};\r\n\r\nconst findAll = () => {\r\n    const conf = getConf();\r\n\r\n    const url = new URL(`${config.apiGenreEndpoint}/findAll`);\r\n\r\n    return http\r\n        .get(url.href, conf)\r\n        .then(({data: genres}) => {\r\n            return genres;\r\n        })\r\n        .catch(({response}) => {\r\n            toastError(response?.status === 400 && response.data?.message);\r\n        });\r\n};\r\n\r\nconst findById = (id) => {\r\n    const conf = getConf();\r\n\r\n    const url = new URL(`${config.apiGenreEndpoint}/findById`);\r\n    url.searchParams.append('id', id);\r\n\r\n    return http\r\n        .get(url.href, conf)\r\n        .then(({data: genre}) => {\r\n            return genre;\r\n        })\r\n        .catch(({response}) => {\r\n            toastError((response?.status === 400 || response?.status === 404) && response.data?.message);\r\n        });\r\n};\r\n\r\nexport default {\r\n    saveGenre,\r\n    updateGenre,\r\n    deleteGenreById,\r\n    findAll,\r\n    findById\r\n};\r\n","C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\api\\seasonApi.js",["127"],"import constants from '../constants.json';\r\nimport http from '../services/httpService';\r\nimport config from '../config.json';\r\nimport {toast} from 'react-toastify';\r\nimport {toastError} from '../utils/utils';\r\n\r\nconst getConf = () => ({\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: localStorage.getItem(constants.accessToken),\r\n    },\r\n});\r\n\r\nconst saveSeason = (season, callback) => {\r\n    const conf = getConf();\r\n\r\n    const url = new URL(`${config.apiSeasonEndpoint}`);\r\n\r\n    http\r\n        .post(url.href, season, conf)\r\n        .then(({data: season}) => {\r\n            toast.success(`Stagione ${season.seasonname} creato correttamente`);\r\n\r\n            if (typeof callback === 'function') callback();\r\n        })\r\n        .catch(({response}) => {\r\n            toastError(response?.status === 400 && response.data?.message);\r\n        });\r\n};\r\n\r\nconst updateSeason = (season, callback) => {\r\n    const conf = getConf();\r\n\r\n    const url = new URL(`${config.apiSeasonEndpoint}`);\r\n\r\n    http\r\n        .put(url.href, season, conf)\r\n        .then(({data: season}) => {\r\n            toast.success(`Stagione ${season.seasonname} agiornato correttamente`);\r\n\r\n            if (typeof callback === 'function') callback();\r\n        })\r\n        .catch(({response}) => {\r\n            toastError(response?.status === 400 && response.data?.message);\r\n        });\r\n};\r\n\r\nconst deleteSeasonById = (id, callback) => {\r\n    const conf = getConf();\r\n\r\n    const url = new URL(`${config.apiSeasonEndpoint}`);\r\n    url.searchParams.append('id', id);\r\n\r\n    http\r\n        .delete(url.href, conf)\r\n        .then(({data: season}) => {\r\n            toast.success(`Stagione ${season.seasonname} eliminato correttamente`);\r\n\r\n            if (typeof callback === 'function') callback();\r\n        })\r\n        .catch(({response}) => {\r\n            toastError((response?.status === 400 || response?.status === 404) && response.data?.message);\r\n        });\r\n};\r\n\r\nconst findAll = () => {\r\n    const conf = getConf();\r\n\r\n    const url = new URL(`${config.apiSeasonEndpoint}/findAll`);\r\n\r\n    return http\r\n        .get(url.href, conf)\r\n        .then(({data: seasons}) => {\r\n            return seasons;\r\n        })\r\n        .catch(({response}) => {\r\n            toastError(response?.status === 400 && response.data?.message);\r\n        });\r\n};\r\n\r\nconst findById = (id) => {\r\n    const conf = getConf();\r\n\r\n    const url = new URL(`${config.apiSeasonEndpoint}/findById`);\r\n    url.searchParams.append('id', id);\r\n\r\n    return http\r\n        .get(url.href, conf)\r\n        .then(({data: season}) => {\r\n            return season;\r\n        })\r\n        .catch(({response}) => {\r\n            toastError((response?.status === 400 || response?.status === 404) && response.data?.message);\r\n        });\r\n};\r\n\r\nexport default {\r\n    saveSeason,\r\n    updateSeason,\r\n    deleteSeasonById,\r\n    findAll,\r\n    findById\r\n};\r\n","C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\components\\login\\loginApi.js",[],"C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\components\\home.jsx",["128","129"],"C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\components\\privateRoute.jsx",[],"C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\components\\notFound.jsx",[],"C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\components\\login\\login.jsx",["130","131","132"],"import React, {useEffect, useState} from 'react';\r\nimport $ from 'jquery';\r\nimport {toast} from 'react-toastify';\r\nimport jwtDecode from 'jwt-decode';\r\nimport routes from '../../routes.json';\r\nimport constants from '../../constants.json';\r\nimport LoadingSpinner from '../common/loadingSpinner';\r\nimport \"./login.css\";\r\n\r\nconst Login = props => {\r\n    const [credential, setCredential] = useState({});\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (e.nativeEvent.submitter.name === constants.login) {\r\n            props.onLogin(credential);\r\n        } else if (e.nativeEvent.submitter.name === constants.registration) {\r\n            props.onRegistration(credential);\r\n        }\r\n    };\r\n\r\n    const handleChange = ({currentTarget: input}) => {\r\n        setCredential({...credential, [input.name]: input.value});\r\n    };\r\n\r\n    useEffect(() => {\r\n        // if (localStorage.getItem(constants.accessToken)) {\r\n        //     toast.info(\r\n        //         'Sei già autenticato ' +\r\n        //         jwtDecode(localStorage.getItem(constants.accessToken)).cn +\r\n        //         '!',\r\n        //     );\r\n        //     props.history.replace(routes.home);\r\n        // }\r\n    }, [props])\r\n\r\n    return props.loading ? (\r\n        <LoadingSpinner/>\r\n    ) : (\r\n        <div>\r\n            <div className=\"login-form\">\r\n                <form className=\"form-signin\" onSubmit={e => handleSubmit(e)}>\r\n                    <div\r\n                        id=\"network-error\"\r\n                        className=\"alert alert-danger alert-dismissible d-none\"\r\n                    >\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"close\"\r\n                            onClick={() =>\r\n                                $('#network-error').addClass('d-none').removeClass('show')\r\n                            }\r\n                        >\r\n                            &times;\r\n                        </button>\r\n                        <strong>Errore di Rete!</strong> Siamo spiacenti.\r\n                    </div>\r\n\r\n                    <div\r\n                        id=\"login-error\"\r\n                        className=\"alert alert-danger alert-dismissible d-none\"\r\n                    >\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"close\"\r\n                            onClick={() =>\r\n                                $('#login-error').addClass('d-none').removeClass('show')\r\n                            }\r\n                        >\r\n                            &times;\r\n                        </button>\r\n                        <strong>Errore!</strong> Nickname o Password errati.\r\n                    </div>\r\n\r\n\r\n                    <div className=\"text-center mb-4\">\r\n                        <h1 className=\"h3 mb-3 font-weight-normal\">\r\n                            Accedi a My Virtual Space\r\n                        </h1>\r\n                    </div>\r\n\r\n                    <div className=\"form-label-group\">\r\n                        <input\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            name=\"username\"\r\n                            id=\"inputUsername\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Nickname\"\r\n                            required\r\n                            autoFocus\r\n                        />\r\n                        <label htmlFor=\"inputUsername\">Nickname</label>\r\n                    </div>\r\n\r\n                    <div className=\"form-label-group\">\r\n                        <input\r\n                            onChange={handleChange}\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            id=\"inputPassword\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Password\"\r\n                            required\r\n                        />\r\n                        <label htmlFor=\"inputPassword\">Password</label>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <button\r\n                            id={constants.registration}\r\n                            name={constants.registration}\r\n                            className=\"btn btn-lg btn-my-virtual-space-color float-left w-49-5\"\r\n                            type=\"submit\"\r\n                        >\r\n                            {constants.registration}\r\n                        </button>\r\n\r\n                        <button\r\n                            id={constants.login}\r\n                            name={constants.login}\r\n                            className=\"btn btn-lg btn-my-virtual-space-color float-right w-49-5\"\r\n                            type=\"submit\"\r\n                        >\r\n                            {constants.login}\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\services\\httpService.js",[],"C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\utils\\utils.js",[],"C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\components\\header.jsx",[],"C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\components\\common\\navbar.jsx",[],"C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\components\\common\\loadingSpinner.jsx",[],"C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\services\\takeLatest.js",[],"C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\components\\common\\navButton.jsx",[],"C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\components\\anime\\animeList.jsx",[],"C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\components\\common\\tableHeader.jsx",[],"C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\components\\anime\\anime.jsx",[],"C:\\Users\\ut1169\\Documents\\my-virtual-space\\my-virtual-space-ui\\src\\components\\common\\emptyBody.jsx",[],{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":97,"column":1,"nodeType":"139","endLine":103,"endColumn":3},{"ruleId":"137","severity":1,"message":"138","line":97,"column":1,"nodeType":"139","endLine":103,"endColumn":3},{"ruleId":"137","severity":1,"message":"138","line":97,"column":1,"nodeType":"139","endLine":103,"endColumn":3},{"ruleId":"137","severity":1,"message":"138","line":97,"column":1,"nodeType":"139","endLine":103,"endColumn":3},{"ruleId":"137","severity":1,"message":"138","line":97,"column":1,"nodeType":"139","endLine":103,"endColumn":3},{"ruleId":"140","severity":1,"message":"141","line":1,"column":16,"nodeType":"142","messageId":"143","endLine":1,"endColumn":25},{"ruleId":"140","severity":1,"message":"144","line":2,"column":13,"nodeType":"142","messageId":"143","endLine":2,"endColumn":14},{"ruleId":"140","severity":1,"message":"145","line":3,"column":9,"nodeType":"142","messageId":"143","endLine":3,"endColumn":14},{"ruleId":"140","severity":1,"message":"146","line":4,"column":8,"nodeType":"142","messageId":"143","endLine":4,"endColumn":17},{"ruleId":"140","severity":1,"message":"147","line":5,"column":8,"nodeType":"142","messageId":"143","endLine":5,"endColumn":14},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'$' is defined but never used.","'toast' is defined but never used.","'jwtDecode' is defined but never used.","'routes' is defined but never used.","no-global-assign","no-unsafe-negation"]